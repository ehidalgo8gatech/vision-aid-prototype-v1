generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  admin        Admin?
  hospitalRole HospitalRole?
}

model Admin {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique // relation scalar field (used in the `@relation` attribute above)
}

model Hospital {
  id               Int                @id @default(autoincrement())
  name             String?            @unique
  hospitalRole     HospitalRole[]
  Beneficiary      Beneficiary[]
  Camps            Camps[]
  School_Screening School_Screening[]
}

model HospitalRole {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int      @unique // relation scalar field (used in the `@relation` attribute above)
  hospital   Hospital @relation(fields: [hospitalId], references: [id])
  hospitalId Int // relation scalar field (used in the `@relation` attribute above)
  admin      Boolean
}

model Beneficiary {
  mrn                                 String                                @id @unique
  beneficiaryName                     String
  hospital                            Hospital                              @relation(fields: [hospitalId], references: [id])
  hospitalId                          Int
  dateOfBirth                         DateTime
  gender                              String
  phoneNumber                         String?
  education                           String?
  occupation                          String?
  districts                           String?
  state                               String?
  diagnosis                           String?
  vision                              String?
  mDVI                                String?
  extraInformation                    String                                @db.Text
  Computer_Training                   Computer_Training[]
  Mobile_Training                     Mobile_Training[]
  Orientation_Mobility_Training       Orientation_Mobility_Training[]
  Vision_Enhancement                  Vision_Enhancement[]
  Counselling_Education               Counselling_Education[]
  Comprehensive_Low_Vision_Evaluation Comprehensive_Low_Vision_Evaluation[]
}

model Beneficiary_Mirror {
  id                       Int     @id
  phoneNumberRequired      Boolean
  educationRequired        Boolean
  occupationRequired       Boolean
  districtsRequired        Boolean
  stateRequired            Boolean
  diagnosisRequired        Boolean
  visionRequired           Boolean
  mDVIRequired             Boolean
  extraInformationRequired String  @db.Text
  hospitalName             String?
}

model Computer_Training {
  id                Int         @id @default(autoincrement())
  beneficiary       Beneficiary @relation(fields: [beneficiaryId], references: [mrn])
  beneficiaryId     String
  date              DateTime?
  sessionNumber     Int?
  visionType        String?
  typeOfCounselling String?
  extraInformation  String      @db.Text
}

model Computer_Training_Mirror {
  id                       Int     @id
  date                     Boolean
  sessionNumber            Boolean
  extraInformationRequired String  @db.Text
  hospitalName             String?
}

model Mobile_Training {
  id                Int         @id @default(autoincrement())
  beneficiary       Beneficiary @relation(fields: [beneficiaryId], references: [mrn])
  beneficiaryId     String
  date              DateTime?
  sessionNumber     Int?
  vision            String?
  typeOfCounselling String?
  extraInformation  String      @db.Text
}

model Mobile_Training_Mirror {
  id                       Int     @id
  date                     Boolean
  sessionNumber            Boolean
  extraInformationRequired String  @db.Text
  hospitalName             String?
}

model Orientation_Mobility_Training {
  id                Int         @id @default(autoincrement())
  beneficiary       Beneficiary @relation(fields: [beneficiaryId], references: [mrn])
  beneficiaryId     String
  date              DateTime?
  sessionNumber     Int?
  vision            String?
  typeOfCounselling String?
  extraInformation  String      @db.Text
}

model Orientation_Mobility_Training_Mirror {
  id                       Int     @id
  date                     Boolean
  sessionNumber            Boolean
  extraInformationRequired String  @db.Text
  hospitalName             String?
}

model Vision_Enhancement {
  id               Int         @id @default(autoincrement())
  beneficiary      Beneficiary @relation(fields: [beneficiaryId], references: [mrn])
  beneficiaryId    String
  date             DateTime?
  sessionNumber    Int?
  Diagnosis        String?
  MDVI             String?
  extraInformation String      @db.Text
}

model Vision_Enhancement_Mirror {
  id                       Int     @id
  date                     Boolean
  sessionNumber            Boolean
  extraInformationRequired String  @db.Text
  hospitalName             String?
}

model Comprehensive_Low_Vision_Evaluation {
  id                        Int         @id @default(autoincrement())
  beneficiary               Beneficiary @relation(fields: [beneficiaryId], references: [mrn])
  beneficiaryId             String
  date                      DateTime?
  sessionNumber             Int?
  distanceVisualAcuityRE    String
  distanceVisualAcuityLE    String
  distanceBinocularVisionBE String
  nearVisualAcuityRE        String
  nearVisualAcuityLE        String
  nearBinocularVisionBE     String
  recommendation            String
  dispensed                 String
  dispensedDate             DateTime?
  cost                      Int
  costToBeneficiary         Int
  extraInformation          String      @db.Text
}

model Comprehensive_Low_Vision_Evaluation_Mirror {
  id                       Int     @id
  extraInformationRequired String  @db.Text
  hospitalName             String?
}

model Counselling_Education {
  id               Int         @id @default(autoincrement())
  beneficiary      Beneficiary @relation(fields: [beneficiaryId], references: [mrn])
  beneficiaryId    String
  date             DateTime?
  sessionNumber    Int?
  vision           String?
  typeCounselling  String?
  MDVI             String?
  extraInformation String      @db.Text
}

model Counselling_Education_Mirror {
  id                       Int     @id
  date                     Boolean
  sessionNumber            Boolean
  typeCounselling          Boolean
  extraInformationRequired String  @db.Text
  hospitalName             String?
}

model Camps {
  id                Int       @id @default(autoincrement())
  date              DateTime?
  schoolName        String?
  studentName       String?
  age               Int?
  gender            String?
  diagnosis         String?
  visualAcuityRE    String?
  visualAcuityLE    String?
  unaidedNearVision String?
  refractionVALE    String?
  LVA               String?
  LVANear           String?
  nonOpticalAid     String?
  actionNeeded      String?
  hospitalId        Int?
  hospital          Hospital? @relation(fields: [hospitalId], references: [id])
}

model School_Screening {
  id                    Int       @id @default(autoincrement())
  date                  DateTime?
  typeCamp              String?
  screeningPlace        String?
  organiser             String?
  contactNumber         Int?
  address               String?
  screenedTotal         Int?
  refractiveErrors      Int?
  spectaclesDistributed Int?
  checked               String?
  refer                 Int?
  staff                 Int?
  lowVision             Int?
  hospitalId            Int?
  hospital              Hospital? @relation(fields: [hospitalId], references: [id])
}
